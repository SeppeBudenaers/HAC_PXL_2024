Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2023.2 (win64) Build 4029153 Fri Oct 13 20:14:34 MDT 2023
| Date         : Fri May 24 16:03:32 2024
| Host         : Beta running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xc7z020clg400-1
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 66
+-----------+----------+-------------------------------------------------------------------+------------+
| Rule      | Severity | Description                                                       | Violations |
+-----------+----------+-------------------------------------------------------------------+------------+
| DPIP-1    | Warning  | Input pipelining                                                  | 6          |
| DPOP-1    | Warning  | PREG Output pipelining                                            | 21         |
| DPOP-2    | Warning  | MREG Output pipelining                                            | 32         |
| DPREG-4   | Warning  | DSP48E1_PregDynOpmodeZmuxP:                                       | 1          |
| AVAL-4    | Advisory | enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND | 4          |
| AVAL-5    | Advisory | enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND   | 1          |
| REQP-1725 | Advisory | DSP_Abus_sign_bit_alert                                           | 1          |
+-----------+----------+-------------------------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/i_no_versal_es1_workaround.DSP input design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP input design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP input design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP/CARRYOUT[3:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP output design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product output design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product output design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__1 output design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__2 output design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product output design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product output design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product output design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product__0 output design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/i_no_versal_es1_workaround.DSP multiplier stage design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_2ns_64s_64_3_1_U41/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_32ns_63_3_1_U34/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__1 multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__2 multiplier stage design_1_i/applyConvolution_0/U0/mul_31ns_64s_64_3_1_U40/tmp_product__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U35/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32ns_32ns_64_3_1_U36/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U37/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_32s_32s_32_3_1_U38/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/buff0_reg multiplier stage design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/buff0_reg__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product multiplier stage design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product__0 multiplier stage design_1_i/applyConvolution_0/U0/mul_34s_32ns_64_3_1_U39/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPREG-4#1 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

AVAL-4#1 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#2 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP1/i_no_versal_es1_workaround.DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#3 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.MULT/DSP48E1_SPD_SGL_VARIANT.FIX_MULT/DSP2/i_no_versal_es1_workaround.DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#4 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-5#1 Advisory
enum_USE_MULT_NONE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fmul_32ns_32ns_32_4_max_dsp_1_U8/applyConvolution_fmul_32ns_32ns_32_4_max_dsp_1_ip_u/inst/i_synth/MULT.OP/i_non_prim.R_AND_R/LAT_OPT.FULL.R_AND_R/DSP48E1_SGL_EXP_IP.OLD_ADD.ADD/i_no_versal_es1_workaround.DSP: DSP48E1 is not using the Multiplier (USE_MULT = NONE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

REQP-1725#1 Advisory
DSP_Abus_sign_bit_alert  
design_1_i/applyConvolution_0/U0/grp_applyConvolution_Pipeline_VITIS_LOOP_34_5_fu_373/fadd_32ns_32ns_32_8_full_dsp_1_U7/applyConvolution_fadd_32ns_32ns_32_8_full_dsp_1_ip_u/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP: When using the PreAdder and USE_DPORT is TRUE, the A operand should be restricted to 24 bit two's complement (and sign extended) to avoid over/underflow in the pre-add stage.
Related violations: <none>


