// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="applyConvolution_applyConvolution,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.312000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2716,HLS_SYN_LUT=3525,HLS_VERSION=2023_2}" *)

module applyConvolution (
        ap_clk,
        ap_rst_n,
        image_r_TDATA,
        image_r_TVALID,
        image_r_TREADY,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 4;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] image_r_TDATA;
input   image_r_TVALID;
output   image_r_TREADY;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] height;
wire   [31:0] width;
wire   [31:0] channels;
wire   [3:0] kernel_address0;
reg    kernel_ce0;
wire   [31:0] kernel_q0;
reg   [31:0] channels_read_reg_715;
reg   [31:0] width_read_reg_721;
reg   [31:0] height_read_reg_728;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_318_p2;
reg   [63:0] mul_ln6_reg_781;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln25_fu_355_p2;
reg   [0:0] icmp_ln25_reg_789;
wire    ap_CS_fsm_state5;
wire   [63:0] add_ln24_1_fu_365_p2;
reg   [63:0] add_ln24_1_reg_799;
wire   [30:0] select_ln24_fu_392_p3;
reg   [30:0] select_ln24_reg_813;
wire    ap_CS_fsm_state7;
wire   [31:0] zext_ln24_fu_399_p1;
reg   [31:0] zext_ln24_reg_818;
wire   [31:0] zext_ln25_1_fu_409_p1;
reg   [31:0] zext_ln25_1_reg_824;
wire   [31:0] empty_fu_426_p2;
reg   [31:0] empty_reg_838;
wire    ap_CS_fsm_state8;
wire   [0:0] or_ln31_1_fu_448_p2;
reg   [0:0] or_ln31_1_reg_844;
wire    ap_CS_fsm_state9;
wire   [3:0] add_ln27_fu_460_p2;
reg   [3:0] add_ln27_reg_852;
wire   [0:0] icmp_ln28_fu_466_p2;
reg   [0:0] icmp_ln28_reg_857;
wire   [31:0] p_mid1_fu_490_p2;
reg   [31:0] p_mid1_reg_862;
wire   [2:0] select_ln27_1_fu_501_p3;
reg   [2:0] select_ln27_1_reg_868;
wire   [1:0] trunc_ln27_fu_509_p1;
reg   [1:0] trunc_ln27_reg_873;
wire   [2:0] select_ln27_3_fu_513_p3;
reg   [2:0] select_ln27_3_reg_878;
wire   [31:0] add_ln29_fu_525_p2;
reg   [31:0] add_ln29_reg_883;
wire   [2:0] add_ln28_fu_530_p2;
reg   [2:0] add_ln28_reg_889;
wire   [0:0] or_ln31_2_fu_644_p2;
reg   [0:0] or_ln31_2_reg_895;
wire    ap_CS_fsm_state10;
reg   [31:0] kernel_load_reg_904;
wire    ap_CS_fsm_state11;
wire    grp_applyConvolution_Pipeline_1_fu_275_ap_start;
wire    grp_applyConvolution_Pipeline_1_fu_275_ap_done;
wire    grp_applyConvolution_Pipeline_1_fu_275_ap_idle;
wire    grp_applyConvolution_Pipeline_1_fu_275_ap_ready;
wire   [31:0] grp_applyConvolution_Pipeline_1_fu_275_sum_2_2_out;
wire    grp_applyConvolution_Pipeline_1_fu_275_sum_2_2_out_ap_vld;
wire   [31:0] grp_applyConvolution_Pipeline_1_fu_275_sum_1_2_out;
wire    grp_applyConvolution_Pipeline_1_fu_275_sum_1_2_out_ap_vld;
wire   [31:0] grp_applyConvolution_Pipeline_1_fu_275_sum_0_21_out;
wire    grp_applyConvolution_Pipeline_1_fu_275_sum_0_21_out_ap_vld;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_done;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_idle;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_ready;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_image_r_TREADY;
wire   [31:0] grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_2_6_out;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_2_6_out_ap_vld;
wire   [31:0] grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_1_6_out;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_1_6_out_ap_vld;
wire   [31:0] grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_0_6_out;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_0_6_out_ap_vld;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_done;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_idle;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_ready;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TREADY;
wire   [31:0] grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TDATA;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TVALID;
wire    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_image_r_TREADY;
reg  signed [2:0] ky_reg_175;
wire    ap_CS_fsm_state13;
reg   [3:0] indvar_flatten_reg_187;
reg   [31:0] ap_phi_mux_sum_2_9_phi_fu_243_p4;
reg   [31:0] sum_2_5_reg_198;
reg   [31:0] ap_phi_mux_sum_1_9_phi_fu_255_p4;
reg   [31:0] sum_1_5_reg_208;
reg   [31:0] ap_phi_mux_sum_0_9_phi_fu_267_p4;
reg   [31:0] sum_0_5_reg_218;
reg   [2:0] kx_reg_228;
reg   [31:0] sum_2_9_reg_239;
reg   [31:0] sum_1_9_reg_251;
reg   [31:0] sum_0_9_reg_263;
reg    grp_applyConvolution_Pipeline_1_fu_275_ap_start_reg;
wire   [0:0] icmp_ln24_fu_360_p2;
wire    ap_CS_fsm_state6;
reg    grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start_reg;
wire    ap_CS_fsm_state12;
reg    grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire   [63:0] p_cast_fu_659_p1;
reg   [30:0] x_fu_96;
wire   [30:0] select_ln25_fu_541_p3;
wire   [0:0] icmp_ln27_fu_454_p2;
reg   [31:0] sum_0_1_fu_100;
reg   [31:0] sum_1_1_fu_104;
reg   [31:0] sum_2_1_fu_108;
reg   [30:0] y_fu_112;
reg   [63:0] indvar_flatten9_fu_116;
wire   [31:0] grp_fu_318_p0;
wire   [31:0] grp_fu_318_p1;
wire   [31:0] zext_ln25_fu_351_p1;
wire   [30:0] add_ln24_fu_386_p2;
wire   [30:0] select_ln24_1_fu_403_p3;
wire  signed [31:0] sext_ln27_fu_422_p1;
wire   [0:0] slt_fu_438_p2;
wire   [0:0] tmp_fu_431_p3;
wire   [0:0] rev_fu_442_p2;
wire  signed [2:0] indvars_iv_next2514_fu_480_p2;
wire  signed [31:0] sext_ln27_1_fu_486_p1;
wire   [2:0] indvars_iv_next25_mid1_fu_495_p2;
wire  signed [2:0] select_ln27_fu_472_p3;
wire  signed [31:0] sext_ln28_fu_521_p1;
wire   [30:0] add_ln25_fu_536_p2;
wire   [3:0] tmp_1_fu_579_p3;
wire   [3:0] select_ln27_1_cast37_fu_576_p1;
wire   [0:0] slt51_fu_599_p2;
wire   [0:0] tmp_3_fu_592_p3;
wire   [0:0] rev52_fu_603_p2;
wire   [0:0] or_ln31_3_fu_609_p2;
wire   [0:0] icmp_ln31_fu_628_p2;
wire   [0:0] xor_ln31_fu_632_p2;
wire   [0:0] tmp_4_fu_621_p3;
wire   [0:0] select_ln27_2_fu_615_p3;
wire   [0:0] or_ln31_fu_638_p2;
wire   [3:0] empty_21_fu_586_p2;
wire   [3:0] add_ln28_cast_fu_650_p1;
wire   [3:0] empty_22_fu_653_p2;
wire    ap_CS_fsm_state16;
wire    regslice_both_output_r_U_apdone_blk;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    regslice_both_image_r_U_apdone_blk;
wire   [31:0] image_r_TDATA_int_regslice;
wire    image_r_TVALID_int_regslice;
reg    image_r_TREADY_int_regslice;
wire    regslice_both_image_r_U_ack_in;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_r_U_vld_out;
wire   [63:0] grp_fu_318_p00;
wire   [63:0] grp_fu_318_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 grp_applyConvolution_Pipeline_1_fu_275_ap_start_reg = 1'b0;
#0 grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start_reg = 1'b0;
#0 grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start_reg = 1'b0;
#0 x_fu_96 = 31'd0;
#0 sum_0_1_fu_100 = 32'd0;
#0 sum_1_1_fu_104 = 32'd0;
#0 sum_2_1_fu_108 = 32'd0;
#0 y_fu_112 = 31'd0;
#0 indvar_flatten9_fu_116 = 64'd0;
end

applyConvolution_kernel_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_address0),
    .ce0(kernel_ce0),
    .q0(kernel_q0)
);

applyConvolution_applyConvolution_Pipeline_1 grp_applyConvolution_Pipeline_1_fu_275(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_applyConvolution_Pipeline_1_fu_275_ap_start),
    .ap_done(grp_applyConvolution_Pipeline_1_fu_275_ap_done),
    .ap_idle(grp_applyConvolution_Pipeline_1_fu_275_ap_idle),
    .ap_ready(grp_applyConvolution_Pipeline_1_fu_275_ap_ready),
    .sum_2_1(sum_2_1_fu_108),
    .sum_1_1(sum_1_1_fu_104),
    .sum_0_1(sum_0_1_fu_100),
    .sum_2_2_out(grp_applyConvolution_Pipeline_1_fu_275_sum_2_2_out),
    .sum_2_2_out_ap_vld(grp_applyConvolution_Pipeline_1_fu_275_sum_2_2_out_ap_vld),
    .sum_1_2_out(grp_applyConvolution_Pipeline_1_fu_275_sum_1_2_out),
    .sum_1_2_out_ap_vld(grp_applyConvolution_Pipeline_1_fu_275_sum_1_2_out_ap_vld),
    .sum_0_21_out(grp_applyConvolution_Pipeline_1_fu_275_sum_0_21_out),
    .sum_0_21_out_ap_vld(grp_applyConvolution_Pipeline_1_fu_275_sum_0_21_out_ap_vld)
);

applyConvolution_applyConvolution_Pipeline_VITIS_LOOP_33_5 grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start),
    .ap_done(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_done),
    .ap_idle(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_idle),
    .ap_ready(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_ready),
    .sum_2_5(sum_2_5_reg_198),
    .sum_1_5(sum_1_5_reg_208),
    .sum_0_5(sum_0_5_reg_218),
    .channels(channels_read_reg_715),
    .image_r_TDATA(image_r_TDATA_int_regslice),
    .image_r_TVALID(image_r_TVALID_int_regslice),
    .image_r_TREADY(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_image_r_TREADY),
    .kernel_load(kernel_load_reg_904),
    .sum_2_6_out(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_2_6_out),
    .sum_2_6_out_ap_vld(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_2_6_out_ap_vld),
    .sum_1_6_out(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_1_6_out),
    .sum_1_6_out_ap_vld(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_1_6_out_ap_vld),
    .sum_0_6_out(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_0_6_out),
    .sum_0_6_out_ap_vld(grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_0_6_out_ap_vld)
);

applyConvolution_applyConvolution_Pipeline_VITIS_LOOP_41_6 grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start),
    .ap_done(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_done),
    .ap_idle(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_idle),
    .ap_ready(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_ready),
    .image_r_TVALID(image_r_TVALID_int_regslice),
    .output_r_TREADY(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TREADY),
    .channels(channels_read_reg_715),
    .sum_0_5(sum_0_5_reg_218),
    .sum_1_5(sum_1_5_reg_208),
    .sum_2_5(sum_2_5_reg_198),
    .output_r_TDATA(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TDATA),
    .output_r_TVALID(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TVALID),
    .image_r_TDATA(image_r_TDATA_int_regslice),
    .image_r_TREADY(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_image_r_TREADY)
);

applyConvolution_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .height(height),
    .width(width),
    .channels(channels)
);

applyConvolution_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

applyConvolution_mul_32ns_32ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_3_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_318_p0),
    .din1(grp_fu_318_p1),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

applyConvolution_regslice_both #(
    .DataWidth( 32 ))
regslice_both_image_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(image_r_TDATA),
    .vld_in(image_r_TVALID),
    .ack_in(regslice_both_image_r_U_ack_in),
    .data_out(image_r_TDATA_int_regslice),
    .vld_out(image_r_TVALID_int_regslice),
    .ack_out(image_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_image_r_U_apdone_blk)
);

applyConvolution_regslice_both #(
    .DataWidth( 32 ))
regslice_both_output_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TDATA),
    .vld_in(grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TVALID),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_r_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_applyConvolution_Pipeline_1_fu_275_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln24_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            grp_applyConvolution_Pipeline_1_fu_275_ap_start_reg <= 1'b1;
        end else if ((grp_applyConvolution_Pipeline_1_fu_275_ap_ready == 1'b1)) begin
            grp_applyConvolution_Pipeline_1_fu_275_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start_reg <= 1'b1;
        end else if ((grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_ready == 1'b1)) begin
            grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start_reg <= 1'b1;
        end else if ((grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_ready == 1'b1)) begin
            grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten9_fu_116 <= 64'd0;
    end else if (((icmp_ln27_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        indvar_flatten9_fu_116 <= add_ln24_1_reg_799;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_187 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten_reg_187 <= add_ln27_reg_852;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        kx_reg_228 <= 3'd7;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        kx_reg_228 <= add_ln28_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ky_reg_175 <= 3'd7;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ky_reg_175 <= select_ln27_3_reg_878;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sum_0_5_reg_218 <= grp_applyConvolution_Pipeline_1_fu_275_sum_0_21_out;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sum_0_5_reg_218 <= ap_phi_mux_sum_0_9_phi_fu_267_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_ln31_2_fu_644_p2 == 1'd1))) begin
        sum_0_9_reg_263 <= sum_0_5_reg_218;
    end else if (((1'b1 == ap_CS_fsm_state13) & (or_ln31_2_reg_895 == 1'd0))) begin
        sum_0_9_reg_263 <= grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_0_6_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sum_1_5_reg_208 <= grp_applyConvolution_Pipeline_1_fu_275_sum_1_2_out;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sum_1_5_reg_208 <= ap_phi_mux_sum_1_9_phi_fu_255_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_ln31_2_fu_644_p2 == 1'd1))) begin
        sum_1_9_reg_251 <= sum_1_5_reg_208;
    end else if (((1'b1 == ap_CS_fsm_state13) & (or_ln31_2_reg_895 == 1'd0))) begin
        sum_1_9_reg_251 <= grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_1_6_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sum_2_5_reg_198 <= grp_applyConvolution_Pipeline_1_fu_275_sum_2_2_out;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sum_2_5_reg_198 <= ap_phi_mux_sum_2_9_phi_fu_243_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_ln31_2_fu_644_p2 == 1'd1))) begin
        sum_2_9_reg_239 <= sum_2_5_reg_198;
    end else if (((1'b1 == ap_CS_fsm_state13) & (or_ln31_2_reg_895 == 1'd0))) begin
        sum_2_9_reg_239 <= grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_2_6_out;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        x_fu_96 <= 31'd0;
    end else if (((icmp_ln27_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        x_fu_96 <= select_ln25_fu_541_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_112 <= 31'd0;
    end else if (((icmp_ln27_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        y_fu_112 <= select_ln24_reg_813;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln24_1_reg_799 <= add_ln24_1_fu_365_p2;
        icmp_ln25_reg_789 <= icmp_ln25_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln27_reg_852 <= add_ln27_fu_460_p2;
        add_ln28_reg_889 <= add_ln28_fu_530_p2;
        add_ln29_reg_883 <= add_ln29_fu_525_p2;
        icmp_ln28_reg_857 <= icmp_ln28_fu_466_p2;
        or_ln31_1_reg_844 <= or_ln31_1_fu_448_p2;
        p_mid1_reg_862 <= p_mid1_fu_490_p2;
        select_ln27_1_reg_868 <= select_ln27_1_fu_501_p3;
        select_ln27_3_reg_878 <= select_ln27_3_fu_513_p3;
        trunc_ln27_reg_873 <= trunc_ln27_fu_509_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        channels_read_reg_715 <= channels;
        height_read_reg_728 <= height;
        width_read_reg_721 <= width;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        empty_reg_838 <= empty_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        kernel_load_reg_904 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln6_reg_781 <= grp_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        or_ln31_2_reg_895 <= or_ln31_2_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        select_ln24_reg_813 <= select_ln24_fu_392_p3;
        zext_ln24_reg_818[30 : 0] <= zext_ln24_fu_399_p1[30 : 0];
        zext_ln25_1_reg_824[30 : 0] <= zext_ln25_1_fu_409_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        sum_0_1_fu_100 <= sum_0_5_reg_218;
        sum_1_1_fu_104 <= sum_1_5_reg_208;
        sum_2_1_fu_108 <= sum_2_5_reg_198;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_output_r_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_applyConvolution_Pipeline_1_fu_275_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((regslice_both_output_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (or_ln31_2_reg_895 == 1'd0))) begin
        ap_phi_mux_sum_0_9_phi_fu_267_p4 = grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_0_6_out;
    end else begin
        ap_phi_mux_sum_0_9_phi_fu_267_p4 = sum_0_9_reg_263;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (or_ln31_2_reg_895 == 1'd0))) begin
        ap_phi_mux_sum_1_9_phi_fu_255_p4 = grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_1_6_out;
    end else begin
        ap_phi_mux_sum_1_9_phi_fu_255_p4 = sum_1_9_reg_251;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (or_ln31_2_reg_895 == 1'd0))) begin
        ap_phi_mux_sum_2_9_phi_fu_243_p4 = grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_sum_2_6_out;
    end else begin
        ap_phi_mux_sum_2_9_phi_fu_243_p4 = sum_2_9_reg_239;
    end
end

always @ (*) begin
    if (((regslice_both_output_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        image_r_TREADY_int_regslice = grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_image_r_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        image_r_TREADY_int_regslice = grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_image_r_TREADY;
    end else begin
        image_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln24_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_applyConvolution_Pipeline_1_fu_275_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln27_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (or_ln31_2_fu_644_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((regslice_both_output_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_1_fu_365_p2 = (indvar_flatten9_fu_116 + 64'd1);

assign add_ln24_fu_386_p2 = (y_fu_112 + 31'd1);

assign add_ln25_fu_536_p2 = (x_fu_96 + 31'd1);

assign add_ln27_fu_460_p2 = (indvar_flatten_reg_187 + 4'd1);

assign add_ln28_cast_fu_650_p1 = add_ln28_reg_889;

assign add_ln28_fu_530_p2 = ($signed(select_ln27_fu_472_p3) + $signed(3'd1));

assign add_ln29_fu_525_p2 = ($signed(sext_ln28_fu_521_p1) + $signed(zext_ln25_1_reg_824));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_21_fu_586_p2 = (tmp_1_fu_579_p3 - select_ln27_1_cast37_fu_576_p1);

assign empty_22_fu_653_p2 = (empty_21_fu_586_p2 + add_ln28_cast_fu_650_p1);

assign empty_fu_426_p2 = ($signed(sext_ln27_fu_422_p1) + $signed(zext_ln24_reg_818));

assign grp_applyConvolution_Pipeline_1_fu_275_ap_start = grp_applyConvolution_Pipeline_1_fu_275_ap_start_reg;

assign grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start = grp_applyConvolution_Pipeline_VITIS_LOOP_33_5_fu_285_ap_start_reg;

assign grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start = grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_ap_start_reg;

assign grp_applyConvolution_Pipeline_VITIS_LOOP_41_6_fu_303_output_r_TREADY = (output_r_TREADY_int_regslice & ap_CS_fsm_state15);

assign grp_fu_318_p0 = grp_fu_318_p00;

assign grp_fu_318_p00 = height_read_reg_728;

assign grp_fu_318_p1 = grp_fu_318_p10;

assign grp_fu_318_p10 = width_read_reg_721;

assign icmp_ln24_fu_360_p2 = ((indvar_flatten9_fu_116 == mul_ln6_reg_781) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_355_p2 = (($signed(zext_ln25_fu_351_p1) < $signed(width_read_reg_721)) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_454_p2 = ((indvar_flatten_reg_187 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_466_p2 = ((kx_reg_228 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_628_p2 = (($signed(add_ln29_reg_883) < $signed(width_read_reg_721)) ? 1'b1 : 1'b0);

assign image_r_TREADY = regslice_both_image_r_U_ack_in;

assign indvars_iv_next2514_fu_480_p2 = ($signed(ky_reg_175) + $signed(3'd1));

assign indvars_iv_next25_mid1_fu_495_p2 = ($signed(ky_reg_175) + $signed(3'd2));

assign kernel_address0 = p_cast_fu_659_p1;

assign or_ln31_1_fu_448_p2 = (tmp_fu_431_p3 | rev_fu_442_p2);

assign or_ln31_2_fu_644_p2 = (select_ln27_2_fu_615_p3 | or_ln31_fu_638_p2);

assign or_ln31_3_fu_609_p2 = (tmp_3_fu_592_p3 | rev52_fu_603_p2);

assign or_ln31_fu_638_p2 = (xor_ln31_fu_632_p2 | tmp_4_fu_621_p3);

assign output_r_TVALID = regslice_both_output_r_U_vld_out;

assign p_cast_fu_659_p1 = empty_22_fu_653_p2;

assign p_mid1_fu_490_p2 = ($signed(sext_ln27_1_fu_486_p1) + $signed(zext_ln24_reg_818));

assign rev52_fu_603_p2 = (slt51_fu_599_p2 ^ 1'd1);

assign rev_fu_442_p2 = (slt_fu_438_p2 ^ 1'd1);

assign select_ln24_1_fu_403_p3 = ((icmp_ln25_reg_789[0:0] == 1'b1) ? x_fu_96 : 31'd0);

assign select_ln24_fu_392_p3 = ((icmp_ln25_reg_789[0:0] == 1'b1) ? y_fu_112 : add_ln24_fu_386_p2);

assign select_ln25_fu_541_p3 = ((icmp_ln25_reg_789[0:0] == 1'b1) ? add_ln25_fu_536_p2 : 31'd1);

assign select_ln27_1_cast37_fu_576_p1 = select_ln27_1_reg_868;

assign select_ln27_1_fu_501_p3 = ((icmp_ln28_fu_466_p2[0:0] == 1'b1) ? indvars_iv_next25_mid1_fu_495_p2 : indvars_iv_next2514_fu_480_p2);

assign select_ln27_2_fu_615_p3 = ((icmp_ln28_reg_857[0:0] == 1'b1) ? or_ln31_3_fu_609_p2 : or_ln31_1_reg_844);

assign select_ln27_3_fu_513_p3 = ((icmp_ln28_fu_466_p2[0:0] == 1'b1) ? indvars_iv_next2514_fu_480_p2 : ky_reg_175);

assign select_ln27_fu_472_p3 = ((icmp_ln28_fu_466_p2[0:0] == 1'b1) ? 3'd7 : kx_reg_228);

assign sext_ln27_1_fu_486_p1 = indvars_iv_next2514_fu_480_p2;

assign sext_ln27_fu_422_p1 = ky_reg_175;

assign sext_ln28_fu_521_p1 = select_ln27_fu_472_p3;

assign slt51_fu_599_p2 = (($signed(p_mid1_reg_862) < $signed(height_read_reg_728)) ? 1'b1 : 1'b0);

assign slt_fu_438_p2 = (($signed(empty_reg_838) < $signed(height_read_reg_728)) ? 1'b1 : 1'b0);

assign tmp_1_fu_579_p3 = {{trunc_ln27_reg_873}, {2'd0}};

assign tmp_3_fu_592_p3 = p_mid1_reg_862[32'd31];

assign tmp_4_fu_621_p3 = add_ln29_reg_883[32'd31];

assign tmp_fu_431_p3 = empty_reg_838[32'd31];

assign trunc_ln27_fu_509_p1 = select_ln27_1_fu_501_p3[1:0];

assign xor_ln31_fu_632_p2 = (icmp_ln31_fu_628_p2 ^ 1'd1);

assign zext_ln24_fu_399_p1 = select_ln24_fu_392_p3;

assign zext_ln25_1_fu_409_p1 = select_ln24_1_fu_403_p3;

assign zext_ln25_fu_351_p1 = x_fu_96;

always @ (posedge ap_clk) begin
    zext_ln24_reg_818[31] <= 1'b0;
    zext_ln25_1_reg_824[31] <= 1'b0;
end

endmodule //applyConvolution
